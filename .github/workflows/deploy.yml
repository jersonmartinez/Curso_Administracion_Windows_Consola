name: 🚀 Despliegue Automático del Curso

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  workflow_dispatch:

env:
  COURSE_NAME: "Curso de Administración de Windows desde la Consola"
  VERSION: "2.0.0"

jobs:
  # 📦 Preparar Release
  prepare-release:
    name: 📦 Preparar Release
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout del código
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 🏷️ Obtener versión
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION=$(date +'%Y.%m.%d')
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "📦 Versión: $VERSION"
        
    - name: 📊 Generar changelog
      run: |
        echo "# 📋 Changelog - Versión ${{ steps.get_version.outputs.version }}" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "## 🎉 Nuevas Características" >> CHANGELOG.md
        echo "- Implementación de GitHub Actions para CI/CD" >> CHANGELOG.md
        echo "- Validación automática de scripts batch" >> CHANGELOG.md
        echo "- Generación automática de documentación" >> CHANGELOG.md
        echo "- Pruebas automáticas del sistema" >> CHANGELOG.md
        echo "- Análisis de calidad automatizado" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "## 🔧 Mejoras" >> CHANGELOG.md
        echo "- Estructura de directorios optimizada" >> CHANGELOG.md
        echo "- Documentación mejorada" >> CHANGELOG.md
        echo "- Scripts con validación de privilegios" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "## 🐛 Correcciones" >> CHANGELOG.md
        echo "- Corrección de errores de sintaxis en scripts" >> CHANGELOG.md
        echo "- Mejora en la validación de archivos" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "## 📅 Fecha de Release" >> CHANGELOG.md
        echo "- **Fecha:** $(date)" >> CHANGELOG.md
        echo "- **Commit:** $GITHUB_SHA" >> CHANGELOG.md
        
    - name: 📤 Subir changelog
      uses: actions/upload-artifact@v3
      with:
        name: changelog-${{ steps.get_version.outputs.version }}
        path: CHANGELOG.md
        retention-days: 30

  # 📦 Crear Release
  create-release:
    name: 📦 Crear Release
    runs-on: ubuntu-latest
    needs: prepare-release
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: 📥 Checkout del código
      uses: actions/checkout@v4
      
    - name: 📦 Descargar artifacts
      uses: actions/download-artifact@v3
      with:
        name: changelog-${{ steps.get_version.outputs.version }}
        path: ./
        
    - name: 🏷️ Crear release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false 